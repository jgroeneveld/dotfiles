let g:ctrlp_max_files=0
let g:ctrlp_max_depth=40

colors wombat256

" clear highlight after search with esc
" nnoremap <esc> :noh<return><esc>

" easier window traversal
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

"easier start/end of line
nmap <S-h> 0
nmap <S-l> $

" remap undo
nmap U <C-R>

if has('autocmd')
  if has('spell')
    au BufNewFile,BufRead COMMIT_EDITMSG setlocal spell
  endif
  au BufNewFile,BufRead COMMIT_EDITMSG call feedkeys('ggi', 't')
endif

command OpenFolder !open %:p:h

" disabling auto insert of linebreaks when entering text
set textwidth=0 wrapmargin=0

" ctrp ignores for rails
set wildignore+=*/tmp/*
set wildignore+=*/log/*
set wildignore+=*/vendor/*

" for phraseapp in specific
set wildignore+=*/solr/*

" highlighting the current line
set cul

" only on the active window
augroup BgHighlight
    autocmd!
    autocmd WinEnter * set cul
    autocmd WinLeave * set nocul
augroup END

" removing trailing whitespaces on save
fun! <SID>StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    call cursor(l, c)
endfun

autocmd FileType c,cpp,java,php,ruby,python,markdown autocmd BufWritePre <buffer> :call <SID>StripTrailingWhitespaces()

" setup :make to use rspec etc
" http://code.nevercraft.net/blog/2013/running-rspec-in-vim.html
autocmd FileType ruby
  \ if expand("%") =~# '_spec\.rb$' |
  \   compiler rspec | setl makeprg=rspec\ $*|
  \ else |
  \   compiler ruby | setl makeprg=ruby\ -wc\ \"%:p\" |
  \ endif

